import { IObject } from 'interfaces/common';
import {
  TRANSFER_CASH_QUERY_TRANSFER_ACCOUNT,
  TRANSFER_CASH_TRANSFER_REQUEST,
  ACCOUNT_QUERY_EQUITY_ACCOUNT_BALANCE,
  DERIVATIVES_TRANSFER_QUERY_CASH_TRANSFER_INFO,
} from 'redux-sagas/actions';
import {
  CASH_TRANSFER_QUERY_TRANSFER_ACCOUNT_SUCCESS,
  CASH_TRANSFER_QUERY_TRANSFER_ACCOUNT_FAILED,
  CASH_TRANSFER_REQUEST_SUCCESS,
  CASH_TRANSFER_REQUEST_FAILED,
  CASH_TRANSFER_QUERY_ACCOUNT_BALANCE_SUCCESS,
  CASH_TRANSFER_QUERY_DERIVATIVES_TRANSFER_INFO_SUCCESS,
  CASH_TRANSFER_QUERY_DERIVATIVES_TRANSFER_INFO_FAILED,
} from './reducers';

export const queryCashTransferAccounts = () => ({
  type: TRANSFER_CASH_QUERY_TRANSFER_ACCOUNT,
  response: {
    success: CASH_TRANSFER_QUERY_TRANSFER_ACCOUNT_SUCCESS,
    failure: CASH_TRANSFER_QUERY_TRANSFER_ACCOUNT_FAILED,
  },
});

export const requestCashTransfer = (payload: IObject) => ({
  type: TRANSFER_CASH_TRANSFER_REQUEST,
  response: {
    success: CASH_TRANSFER_REQUEST_SUCCESS,
    failure: CASH_TRANSFER_REQUEST_FAILED,
  },
  payload,
  showLoading: true,
});

export const queryDerivativesCashTransferInfo = () => ({
  type: DERIVATIVES_TRANSFER_QUERY_CASH_TRANSFER_INFO,
  response: {
    success: CASH_TRANSFER_QUERY_DERIVATIVES_TRANSFER_INFO_SUCCESS,
    failure: CASH_TRANSFER_QUERY_DERIVATIVES_TRANSFER_INFO_FAILED,
  },
});

export const queryAccountBalance = () => ({
  type: ACCOUNT_QUERY_EQUITY_ACCOUNT_BALANCE,
  response: {
    success: CASH_TRANSFER_QUERY_ACCOUNT_BALANCE_SUCCESS,
  },
});
